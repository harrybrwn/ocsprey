on: [push]
name: ci

jobs:
  lint:
    name: lint
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ~1.19
    - name: Install Go MockGen
      run: go install github.com/golang/mock/mockgen@latest
    - name: go vet
      run: go vet -v ./...
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2

  test:
    name: test
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ~1.19

    - name: Cache Dependencies
      uses: actions/cache@v2
      id: go-cache
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/go/bin
        key: ${{ runner.os }}_${{ runner.arch }}-${{ steps.go-version.outputs.version-used }}-build-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}_${{ runner.arch }}-${{ steps.go-version.outputs.version-used }}-build-
    - name: Install Go dependencies
      if: steps.go-cache.outputs.cache-hit != 'true'
      run: go mod download
    - name: Install Go MockGen
      run: go install github.com/golang/mock/mockgen@latest

    - name: Start Database
      run: docker-compose up -d postgres
    - name: Generate test files
      run: go generate ./...
    - name: Run tests
      run: |-
        go test \
          -v                    \
          -tags=functional_test \
          -cover                \
          -covermode=atomic     \
          -coverprofile=/tmp/coverage.txt \
          ./...
    - name: Print Coverage Report
      run: go tool cover -func /tmp/coverage.txt
    - name: Save Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: /tmp/coverage.txt

  build:
    name: build
    runs-on: ubuntu-22.04
    needs:
      - lint
      - test
    steps:
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Setup docker buildx
      uses: docker/setup-buildx-action@v1
      id: buildx
      with:
        # `docker build` becomes an alias for `docker buildx build`
        install: true
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Build Image
      run: docker buildx bake --push
